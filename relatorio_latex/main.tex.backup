	\documentclass[
	%   draft,
	  a4paper,
	%   titlepage,
	  onecolumn,
	%  twocolumn,
	  11pt,
	  ]%
	% {scrartcl}%
	{article}%
	
	
	\usepackage[utf8x]{inputenc} 
	%\usepackage[utf8]{inputenc} % codificação deste ficheiro em UTF-8 
	
	\usepackage[T1]{fontenc}
	
	%% precisa ser carregado um outro tipo de letra por causa do efeito colateral do pacote T1:
	\usepackage{lmodern} % Fonte "Latin Modern" - A solução óptima para fontes latinas (resolve o problema do T1)
	% \usepackage{times}   % Fonte "Times"
	
	
	\usepackage{textcomp} % caracteres extra - símbolo do euro por exemplo
	
	% \usepackage[portuguese]{babel} % tradução portuguesa

	\newcommand{\referencesname}{Bibliografia}
	
	
	\renewcommand*\listfigurename{Indice de figuras}
	
	%%%%%%%%%% Packages
	
	
	\usepackage[pdftex]{graphicx} % figuras 
	
	
	%Figure side by side

	%\usepackage{subfig}
	\usepackage{graphicx}
	\usepackage{caption}
	\usepackage{subcaption}
	
	
	\usepackage{array} % mais opções nas tabelas (m{width}, b{width}, ...)
	\setlength{\extrarowheight}{1pt} % extra espaço entre as linhas das tabelas
	% \usepackage{multirow} % tabelas com células multilinha
	
	\usepackage{fancyhdr} % Estilo de página
	
		
	\usepackage[usenames,hyperref,pdftex%
	 ,svgnames%
	 ,x11names%
	 ,dvipsnames%
	%  ,cmyk
	 ]{xcolor} % Utilização de cores
	\usepackage{multicol}
	
	
	\usepackage[left=2.3cm,right=2.3cm,top=2.4cm]{geometry} % Margins
	
	
	% math packages by AMS
	\usepackage{amsmath} % main one
	
	
	

	\usepackage{fancyvrb} % more verbatim options 
	
		
	\usepackage[protrusion=true,expansion=true,stretch=10,shrink=10]{microtype} % micro-typographic extensions of pdfTEX (gets high quality text compostion)
	
	\usepackage[
	      pdftex,             %driver
	      colorlinks=true,    %no frame around URL
	      urlcolor=Black,    %no colors
	%       menucolor=black,    %no colors
	      linkcolor=black,    %no colors
	%       pagecolor=black,    %no colors
	      citecolor=Black,    %no colors
	      bookmarks=true,    %tree-like TOC
	      bookmarksopen=true,    %expanded when starting
	      bookmarksnumbered=true, %Put section numbers in bookmarks
	      hyperfootnotes=true,    %no referencing of footnotes, does not compile
	      pdfpagemode=UseOutlines,    %show the bookmarks when starting the pdf viewer
	      plainpages=false, %solve problem ``destination with the same identifier'' warning
	      pdfpagelabels %solve problem ``destination with the same identifier'' warning
	]{hyperref} % fazer hyperlinks (usar como último ``usepackage'')
	
	

	
	 \usepackage[colorinlistoftodos]{todonotes}
	
	\usepackage{xifthen}
	\usepackage{csvsimple}
	
	

	
	\newcommand{\tab}{\hspace*{2em}}
	
	%Text subscript
	\usepackage{fixltx2e}
	
	% Matrizes
	\usepackage{amsmath}
	
	%rename defaults
	
	\renewcommand{\figurename}{Figura}
	\renewcommand{\contentsname}{Indíce}
	\renewcommand{\abstractname}{Introdução}
	\renewcommand{\refname}{Referências}
	
	
	%Figure side by side
	
	
	%force float position
	\usepackage{float}
	\usepackage[section]{placeins}
	
	\makeatletter
	\AtBeginDocument{%
	  \expandafter\renewcommand\expandafter\subsection\expandafter{%
	    \expandafter\@fb@secFB\subsection
	  }%
	}
	\makeatother

	
	%Parametros de exibicao de codigo
	\usepackage{listings}
	\usepackage{color}
	
	\definecolor{mygreen}{rgb}{0,0.6,0}
	\definecolor{mygray}{rgb}{0.5,0.5,0.5}
	\definecolor{mymauve}{rgb}{0.58,0,0.82}
	
	
	
	
	%% Criação de comandos:
	\newcommand{\note}[1]{{\sffamily \slshape \textcolor{red}{#1}}}
	
	\colorlet{FPathColor}{Sepia}
	\colorlet{CmdColor}{blue}
	\colorlet{CmdRuleColor}{LightSteelBlue}
	\colorlet{FileTextColor}{DarkGreen}
	\colorlet{FuncColor}{DeepPink4}
	\CustomVerbatimCommand{\FPath}{Verb}{formatcom=\color{FPathColor},fontsize=\normalsize}
	\CustomVerbatimCommand{\Cmd}{Verb}{formatcom=\color{CmdColor},fontsize=\normalsize}
	\CustomVerbatimCommand{\FText}{Verb}{formatcom=\color{FileTextColor},fontsize=\normalsize}
	\CustomVerbatimCommand{\Func}{Verb}{formatcom=\color{FuncColor},fontsize=\normalsize}
	\DefineVerbatimEnvironment%
	  {Command}{Verbatim}
	  {formatcom=\color{CmdColor},frame=single,rulecolor=\color{CmdRuleColor},fontsize=\normalsize}
	\DefineVerbatimEnvironment%
	  {FileText}{Verbatim}
	  {formatcom=\color{FileTextColor},fontsize=\normalsize}
	
	
	% % Authors:
	
	
	
	\newcommand{\MYauthor}{Luís Rocha} 
	\newcommand{\MYnumber}{2010127532}
	
	\newcommand{\MYauthorII}{José Medeiros}
	\newcommand{\MYnumberII}{2010129934} 
	
		
	% % Titles:
	\newcommand{\MYtitle}{ROS - Detector de metais}
	\newcommand{\MYsubtitle}{Projecto} % Can be empty
	
	
	% % Course
	
	\newcommand{\MYcoursename}{Mecatrónica}
	\newcommand{\MYcourseyear}{2013/2014}
	
	
	% % PDF infos
	
	\newcommand{\MYkeywords}{} % Can be empty
	\newcommand{\MYsubject}{} % Can be empty
	
	
	%% Document format
	
	%% Fancy Headers
	\lhead{\includegraphics[width=2cm]{logo_deec.pdf}}
	\chead{\sc\footnotesize Universidade de Coimbra\\
	Faculdade de Ciências e Tecnologia\\
	Departamento de Engenharia Electrotécnica e de Computadores}
	\rhead{\includegraphics[width=0.8cm]{logo_fctuc.pdf}}
	\setlength{\headheight}{43pt}
	
	% Title
	\title{{\large\MYcoursename\ -- \MYcourseyear}\\[2mm]
	{\MYtitle}
	\ifthenelse{\equal{\MYsubtitle}{}}
	{\vspace*{1mm}}   {\\{\large\MYsubtitle}\vspace*{1mm}}
	}
	
	% Author / Number
	\author{%
	\MYauthor\\{\normalsize \href{mailto:ze_pedrom@hotmail.com}{\MYnumber}}
	\ifthenelse{\isnamedefined{MYauthorII}}
	{\and\MYauthorII\\{\normalsize \href{mailto:luis.rocha.jacinto@gmail.com}{\MYnumberII}}}    {}
	\ifthenelse{\isnamedefined{MYauthorIII}}
	{\and\MYauthorIII\\{\normalsize \href{mailto:a\MYnumberIII@alunos.deec.uc.pt}{\MYnumberIII}}}   {}
	}
	
	% Version / Date
	\date{%
	% \normalsize \today
	\mbox{}
	}


	
	
	%% PDF definitions:
	
	\hypersetup{%
	   pdftitle=\MYtitle,%
	   pdfauthor=\MYauthor,%
	%    pdfcreator=,%
	   pdfkeywords= {\MYkeywords},%
	%    pdfproducer=,%
	   pdfsubject= \MYsubject%
	} % informações do pdf (pacote hyperref)
	
	\pdfinfo{
	/Title	(\MYtitle)
	/Author (\MYauthor)
	/Keywords (\MYkeywords)
	} % informações do pdf
	
	\graphicspath{ {img/} } % Pasta das Imagens
	
	

	
	
	
	\begin{document}
	
	\maketitle
	\thispagestyle{fancyplain}
	
	\setlength{\parskip}{10pt}
	% Introdução
	 \begin{abstract} % (optional)
	
	 
	\tab Neste trabalho foi incorporado um sensor indutivo ao robô Roomba para a detecção de minas terrestres através do uso de ROS.
	Para o controlo do robô foi necessário fazer uso de um API \cite{apiroomba} que permitisse a comunicação com o mesmo e a plataforma ROS. Com este foi possível controlar os movimentos
	do robô através do teclado usando um terminal.\\
	\todo{Por os manuais do sensor}
	\tab Quando na presença de metais e usando os dados devolvidos pelo sensor - proximidade e frequência - é possivel determinar se o robô se encontra perante uma mina.
	Com base neste princípio é possível detectar a presença de minas.


	\end{abstract}
	
	
	
	\begin{figure}[ht]
	  \centering
	  \begin{subfigure}{0.4\textwidth}
	    \centering
	    \includegraphics[width=36mm,scale=0.1]{robot_roomba.png}
	    \caption{Robot Roomba}
	    \label{fig:robot_roomba}
	  \end{subfigure}%
	  \begin{subfigure}{0.6\textwidth}
	    \centering
	    \includegraphics[width=82mm,scale=0.9]{ldc_specs.png}
	    \caption{Componentes do LDC100EVM}
	    \label{fig:ldc_specs}
	  \end{subfigure}
	  
	  \caption{Roomba e LDC100EVM com os componentes}
	  \label{fig:romba_ldc}
	  \end{figure}
	  
	
	  
	
	
	
	\newpage
		
	
	\listoftodos
	
	\newpage
	
        \tableofcontents

        \newpage
	
	\listoffigures

	\newpage
	
	\section{Lista de acrónimos}
	
	
	\begin{description}
	    \item[ROS] 
	     Robot Operation System - Sistema Operativo para Robos
	   \item[LRC Meter]
	   Aparelho que mede indutância, capacitância e resistência\todo{Colocar melhor}
	   \item[PCB]
	   Printed Circuit Board - Placa de Circuito Impresso
	   \item[API]
	   Aplication Programming Interface - Interface de Programação de Aplicações
	   \item[USB]
	   Universal Serial Bus
	   \item[VNC]
	   Virtual Network Computing
	\end{description}
      

	
	
	
	
	\newpage
	
	\section{Descrição do problema}
	
	\tab Pretende-se detectar minas terrestres através do uso de um robô Roomba e de um sensor indutivo LCD1000EVM capaz de medir
	a proximidade e a frequência associada á presença de um metal nas imediações. 
	Este sensor é composto por uma bobine em PCB, um LDC1000 que faz uso da bobine e um microcontrolador - MSP430, tal como se pode observar na
	figura \ref{fig:ldc_specs}. \\
	\tab Para ser possivel a concretização deste projecto é necessário implementar uma interface de comunicação entre
	o computador e o sensor para a aquisição de dados. Esta interface vai ser baseada num protocolo de comunicação que terá
	que ser o mesmo que é usado pelo microcontrolador. Será portanto necessário entender bem o protocolo visto que toda a base
	deste projecto se baseia neste sensor. \\
	\tab Após a interligação entre o sensor e o computador através de uma porta USB é necessário combinar o robô Roomba com o sensor utilizando a plataforma ROS \footnote{Distribuição Hydro}.
	Para isso é obrigatório fazer uso de transformadas ($tf's$) para referenciar o sensor ao eixo/referencial em relação ao referencial principal do robô. Mais á frente no relatório explicaremos melhor o conceito
	e a maneira como interligamos as transformações na nossa implementação
	Este passo é importantissimo para que se possa calcular as posições onde o sensor detecta minas.

	
	\section{Conhecimentos necessários}

	
	\tab Após analisarmos os requisitos deste projecto chegámos á conclusão de que era necessário familiarizarmos
	com a plataforma ROS. Sendo assim seguimos os tutoriais existentes no website WikiRos \cite{wikiros}.
	Após concluidos os tutoriais, ficamos aptos a usar ROS usando C++ como linguagem de programação. \\
	\tab Os seguintes conceitos/utilidades foram usados no nosso projecto, a sua explicação breve apresenta-se
	abaixo:
	
	\begin{description}
	    \item[Tf] \hfill \\
	  Estruturação dos referenciais do robô assim como as transformações necessárias entre os diferentes componentes \footnote{Sensores, plataformas, rodas, entre outros} do robô para que se possa saber as posições de qualquer elemento num dado instante. 
	    \item[Marker] \hfill \\
	  Estrutura de dados que permite usar as bibliotecas do \textit{rviz} para marcar minas no mapa. A posição das minas é obtida pela transformação da \textit{tf} do sensor em relação ao referencial base do robô.
	    \item[ArrayMarker] \hfill \\
	  Guardamos os markers (minas) que detectamos num array de markers. Para tal é necessário fazer \textit{push\_back} de um marker para o array quando é detectada a presença de uma mina.
	     \item[Serial Port] \hfill \\
	  Protocolo de comunicação usado para comunicar com o sensor através de uma porta USB.
	\end{description}
      

	
	
	
	
	
	\newpage
	
	\section{Material disponível}
	
	  \todo[inline]{Melhorar e completar a lista de material!!!}
	
	\begin{description}
	  \item[Robô e API] Roomba 555 com interface USB e \textit{Wrapper} para comunicar com o robô
	  \item[Sensor de Metal] LDC100EVM
	  \item[Computador] Portatil de pequenas dimensões com o sistema operativo Ubuntu\footnote{Ubuntu 13.04}
	  \item[Bobine] 1.5 mH
	  \item[Condensador] 19.2nF
	  \item[ROS] Plataforma ROS
	\end{description}


	
	
	\newpage
	\section{LDC100EVM}
	
	
	\tab O LDC100EVM é um sensor indutivo que permite medir a presença de metais retornando duas variavéis: posição do metal e a frequência de oscilação.
	É um circuito integrado que contém um microcontrolador MSP430 que é usado para fazer a interface entre
	o LDC (sensor) e um computador. 
	Este integrado vêm com uma bobine que pode ser mudada se se partir a PCB na zona a tracejado e colocando
	ai uma bobine á nossa escolha. É possivel ver na figura \ref{fig:sensor} a zona a tracejado:
	
	\begin{figure}[ht]
	\centering
	\includegraphics[width=90mm,scale=0.3]{im1.JPG}
	\caption{Zona a tracejado}\label{fig:sensor}
	\end{figure}
	
	
	Para dimensionar a bobine é necessário satisfazer duas condições para que o sensor possa funcionar na gama ideal:
	
	
	\begin{enumerate}
	  \item A frequência de ressonância deve estar compreendida entre 5 kHz e 5 MHz
	  \item A resistência de ressonância\footnote{Simboliza as perdas associadas ás correntes de Eddy} deve estar compreendida entre 798$\Omega$ e 3.93 M$\Omega$
	\end{enumerate}

	Para o cálculo da frequência e a respectiva resistência usa-se as seguintes fórmulas:
	
	\begin{multicols}{2}
	
	\begin{equation}\label{freq_ress}
	 f_\text{ressonância} = \frac{1}{2\pi\sqrt{LC}}
	\end{equation}
	
	\begin{equation}\label{r_ress}
	 R_p = \frac{1}{R_s} \frac{L}{C}
	\end{equation}


	\end{multicols}
	
	
	Tendo em conta \eqref{freq_ress} e \eqref{r_ress} podemos dimensionar \cite{ldc1000evm} uma nova bobine para o sensor.
	Para garantir que a bobine juntamente com o novo condensador estão em contacto com o sensor
	deve-se soldar um adaptador na placa que permite a fácil colocação de elementos através de uma chave
	de fendas.
	
	
	
	
	Para calcular a indutância \cite{ldc1000_datasheet} medida pelo sensor é necessário fazer uso da frequência medida pelo LDC100EVM. Para tal:
	
	\begin{equation}
	 L_\text{medida} = \frac{1}{C* (2\pi f_\text{sensor})^2}
	\end{equation}

	
	

	
	\newpage
	\section{Solução proposta}
	
	
	
	\subsection{Hardware}
	\missingfigure{Falta a imagem do sensor soldado na PCB...}
	 \todo[inline]{Explicar que usamos o teclado na arquitectura!}
	 Como podemos ver na figura, soldamos os componentes numa placa PCB de modo a facilitar
	a mudança de bobines e para garantir que o circuito está em contacto com os componentes.
	
	
	Em termos de ligações é mais facil de compreender na figura abaixo,
	onde é possivel ver a ligação dos componentes ao Roomba e ao sensor.
	
	\begin{figure}[ht]
	\centering
	\includegraphics[width=100mm,scale=0.7]{roomba.png}
	\caption{Estrutura do robô Roomba com o sensor LDC100EVM }\label{fig:roomba2}
	\end{figure}
	
	
	\subsubsection{Arquitectura}
	Em termos de hardware para este trabalho foi utilizado um computador que vai controlar o Roomba e o sensor LCD1000EVM.
	No sensor foi ainda substituída a bobine que vinha com o mesmo por uma bobine e um condensador de valores por nós pretendidos. \\
	O robô Roomba encontra-se conectado por usb a um computador que o controla.
	Este computador encontra-se ainda ligado a um sensor LCD1000EVM que por sua vez tem ligado a si uma bobine e um condensador por nós projectados e adaptados. \todo{Colocar a estrutura da bobine no robo - fotografia}
	
	\newpage
	
	
	
	\begin{figure}[ht]
	\centering
	\includegraphics[width=100mm,scale=0.5]{circuito1.png}
	\caption{Circuito do Sensor}\label{fig:roomba3}
	\end{figure}
	
	Por intermédio de \eqref{r_ress} é possível aproximar o circuito da seguinte forma:
	
	\begin{figure}[ht]
	\centering
	\includegraphics[width=100mm,scale=0.5]{circuito2.png}
	\caption{Circuito Simplificado}\label{fig:roomba4}
	\end{figure}
	
	
	
	

	\subsubsection{Implementação}
	Como foi anteriormente explicado,  o circuito pode ser alterado e dimensionado para se trabalhar na gama de valores desejada. A seguir iremos explicar os passos necessários para implementar o novo circuito e adaptá-lo ao sensor.
	\setlength{\parskip}{10pt}
	
	\begin{enumerate}
	  \item O primeiro passo será escolher simplesmente a nova bobine por nós pretendida, de seguida escolhemos um condensador que permita cumprir as condições impostas à frequência de ressonância\eqref{freq_ress} e à resistência de ressonância\eqref{r_ress}.
	  \item O próximo passo será com o auxílio de um ``LCR meter'', colocando as pontas deste medidor em paralelo com o paralelo do condensador e da bobine que escolhemos têmos que anotar o valor da resistência $R_p$ lido no medidor, na ausênsia 
	  de qualquer objecto magnético.
	  \item Neste passo temos que colocar um objecto magnético o mais próximo possível da bobine e anotar o novo valor de $R_p$.
	  \item É necessário anotar também a frequência de varrimento que se encontra definida no medidor.
	  \item O passo seguinte é actualizar os registos do sensor para que se adapte ao novo circuito. Para modificar os registos é necessário conectar o sensor a um computador coondutoresm windows e utilizando a gui application fornecida pela texas instruments
	  na secção de alteração dos registos terêmos que modificar três registos. O valor de ${R_p}_{MAX}$ deve ser alterado para o dobro do valor anotado na ausência de objectos c, como os valores disponíveis são discretos deve ser escolhido
	  o mais próximo deste valor por excesso. O valor de ${R_p}_{MIN}$ deve ser alterado para metade do valor anotado na presença de um objecto condutor, como os valores disponíveis são discretos deve ser escolhido
	  o mais próximo deste valor por defeito. O registo da freqûencia deve ser alterado para no máximo $\frac{8}{10}$ do valor da frequência de varrimento. 
	  \item Por fim é necessário partir o sensor onde diz ``coil perfuration'' na figura \ref{fig:roomba5} e soldar o paralelo da bobine e do condensador no sítio onde diz ``conections for custom LC tank'' na  figura \ref{fig:roomba5}.
	 
	\end{enumerate}

	\begin{figure}[ht]
	\centering
	\includegraphics[width=100mm,scale=0.3]{circuito3.png}
	\caption{LCD1000EVM com indicação das perfurações}\label{fig:roomba5}
	\end{figure}
	
	
	
		\todo[inline]{Colocar com imagens e explicações os passos em específicos}
	
	
	
	\newpage

	\subsection{Software}
	
	\todo[inline]{Colocar o pseudo Código}

	
	  \subsubsection{Pseudocódigo}
	
      \subsubsection{Utilização do ROS}

\tab Utilizámos o Robot Operating System (ROS) como plataforma de comunicação entre os dois periféricos por nós utilizados e o computador. Com o ROS é possível implementar bibliotecas de cliente ROS como roscpp, rospy ou roslisp. Por outras palavras significa que facilmente se consegue adaptar programas criados em outras línguas (de entre C++, Python e LISP). No nosso caso em específico adaptámos o programa de leitura do sensor em cpp para a plataforma ROS. Numa segunda parte através do api disponibilizado pelo Gonçalo Cabrita e pelo Bruno Gouveia conseguimos controlar o Roomba pelo teclado do computador. Através da leitura dos encoders e do controlo dos motores foi possível controlar a velocidade angular e linear do robô. \\ \tab Utilizando os nós do ROS foi possível assim controlar o robô e utilizá-lo para a deteção e marcação nas minas. De uma forma mais detalhada foi usada como referência a transformada "ODOM" que nos fornece a posição inicial em que o robô se encontra, com o nó entre esta transformada e o base link do Roomba sabe-se sempre a posição relativa à posição inicial. De seguida criando o nó da transformada sensor(criada por nós) é assim possível, com a informação devolvida pelo sensor, saber se o robô se encontra na presença de uma mina. Caso seja verificada a presença de uma mina são enviadas as coordenadas (x,y,z) para uma função "markers" que irá marcar no mapa as minas em relação a "ODOM", ou seja em relação à posição inicial do robô.


	\subsubsection{Comunicação com o sensor}


	\tab A primeira parte deste trabalho foi concluir que o sensor utiliza porta série como protocolo de comunicação quando comunica com o computador.
	Como tal, para facilitar o uso futuro deste sensor criámos código para as leituras do sensor em três plataformas diferentes de programação.
	Adaptámos por isso o nosso código às plataformas \textit{C++}, \textit{Matlab} e \textit{Python}.
	Estes três códigos encontram-se mais a baixo na tabela(Fazer referencia à tabela).\\
	\tab Analisando as partes mais importantes do código, o primeiro passo é definir a porta série pela qual estamos a comunicar, no nosso caso em particular
	foi a porta "COM9" em \textit{Windows} e "/dev/ttyACM" em \textit{Linux}.
	De seguida definimos o tipo de controlo de fluxo, que neste caso é do tipo "software flow control".
	É necessário definir a frequência de comunicação, Baud Rate, que foi definida por nós a 9600.
	O próximo passo é definir a paridade e o número de bits da comunicação, neste caso não existe paridade e são utilizados 8bits na comunicação.
	Tal como na maioria dos dispositivos electrónicos na comunicação por porta série apenas é necessário de 1 "stop bit", foi ainda definido o tempo
	de espera para leitura máximo("Timeout") a 5 segundos. Definimos o modo de leitura contínua para funcionar de forma assíncrona.
	Por fim ao escrever na porta série o comando 0x33(hexadecimal) ou 3(ASCII), iniciamos a stream de dados. 

				
	\href{run:./code/c++.cpp}{\color{RoyalBlue}Codigo C++}

	\href{run:./code/python.py}{\color{RoyalBlue}Codigo Python}

	\href{run:./code/matlab.m}{\color{RoyalBlue}Codigo Matlab}

	
	\subsubsection{Protocolo VNC}
	
	 Este protocolo baseia-se no conceito de partilha remota de um computador. Para isso existe um computador que partilha o monitor
	 e os controlos 
	 VNC é baseado foi desenvolvido através do protocolo TCP/IP, o que implica que é capaz de funcionar via internet.
	
	\begin{figure}[ht]
	\centering
	\includegraphics[width=90mm,scale=1]{vnc.png}
	\caption{Protocolo VNC}\label{fig:vnc}
	\end{figure}
	
	
	
	
	\section{Resultados}
	
	\todo[inline]{Colocar a simulação rviz}
	\todo[inline]{Robo a andar com rviz activo}
	\todo[inline]{Foto a controlar com o keyboard e a detectar minas}
	
	
	\section{Conclusões}
	

         
       \tab Com este projecto foi possível adaptar o robô ROOMBA para a deteção de minas com o auxílio do sensor LCD1000EVM. Numa primeira parte do projecto foi criada a interface para que o sensor pudesse ser utilizado em Linux. Com o auxílio 
	da plataforma ROS (Robot Operatyng System) foi possível fazer a comunicação dos três periféricos ( computador, robô e sensor) esta plataforma permitiu ainda criar o controlo por teclado da velocidade e direcção do robô. Por fim
	foi possível adptar o sensor para uma bobine por nós desejada.\\ \tab Este projecto permitiu perceber a potencialidade tanto da plataforma ROS como do sensor LCD1000EVM. A grande vantagem da plataforma ROS é que no futuro muito facilmente
	qualquer pessoa poderá adaptar este sensor a outros robôs ou outros sistemas robóticos, é a vantagem do sistema de transformadas em que o ROS trabalha. O sensor LCD1000EVM tem a grande vatagem de com alguns pequenos passos se poder modificar para qualquer bobine 
	que o utilizador pretenda criando-se assim um sensor à medida do que o utilizador precisa.


         
       


	
	
	
	
	

	

\bibliographystyle{plain}
\bibliography{mylib}
	
	
\end{document}
